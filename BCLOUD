#edit-mode: -*- python -*-
#coding:utf-8

#相关帮助链接:
#    1. bcloud使用手册        : http://buildcloud.baidu.com/bcloud
#    2. bcloud各标签说明和用法: http://buildcloud.baidu.com/bcloud/6-bcloud_syntax
#    3. bcloud常见FAQ         : http://buildcloud.baidu.com/bcloud_faq

WORKROOT('../../../')

#platform, if not write PLATFORM('xxx') in BCLOUD file, default is 'centos4u3'
#PLATFORM('centos4u3')

#gcc version
GCC('gcc82')

#Preprocessor flags.
#CPPFLAGS(r'-D_GNU_SOURCE -D__STDC_LIMIT_MACROS')
#CPPFLAGS(r'-DVERSION=\"%s\"' % REPO_REVISION())

#C flags.
#global_cflags_str='-g -pipe -W -Wall -fPIC'
#CFLAGS(global_cflags_str)

#C++ flags.
#global_cxxflags_str='-g -pipe -W -Wall -fPIC'
#CXXFLAGS(global_cxxflags_str)

#-I path
#INCPATHS('. ./include $INC')

#libs which need to link with
#LIBS('$OUT/lib/libCUDA_homework_1.a')
#LIBS('$OUT/lib/libCUDA_homework_3.so')

#link flags
#LDFLAGS('-lpthread -lrt')

#CONFIGS("baidu/bcloud-demo/hello-svn@stable")

#user_sources=GLOB("*.c *.cpp *.cc *.proto")

#release headers
#HEADERS('*.h', '$INC')
#HEADERS('*.hpp', '$INC')
#HEADERS('include/*.h', '$INC')
#HEADERS('include/*.hpp', '$INC')

#release files except headers
#OUTPUT('conf', '$OUT')

#bin
#Notice:
#    1. CppFlags、CFlags、CxxFlags是Sources标签的参数
#    2. 局部标签CppFlags、CFlags、CxxFlags、LdFlags指定的参数会覆盖全局标签CPPFLAGS、CFLAGS、CXXFLAGS、LDFLAGS指定的参数，即局部覆盖全局
#Application('CUDA_homework',
#             Sources(user_sources,
#                     CppFlags('-DDEBUG'),
#                     CFlags('global_cxxflags_str' + ' -O3'),
#                     CxxFlags(global_cxxflags_str + ' -O3')),
#             LdFlags('-lpthread'))

#UT
#UTApplication('CUDA_homework_test',
#               Sources(user_sources),
#               UTOnServer(True))

#.a
#StaticLibrary('CUDA_homework_1',
#               Sources(user_sources))

#发布已经编译好的静态库，该用法要求libCUDA_homework_2.a文件必须位于代码根目录中的lib子目录下
#StaticLibrary('CUDA_homework_2',
#               PreBuilt(True))

#.so
#SharedLibrary('CUDA_homework_3',
#               Sources(user_sources))

#发布已经编译好的动态库，该用法要求libCUDA_homework4.so文件必须位于代码根目录中的lib子目录下
#SharedLibrary('CUDA_homework_4',
#               PreBuilt(True))

#sub directory
#Directory('demo')

